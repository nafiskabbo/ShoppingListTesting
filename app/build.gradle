plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.androiddevs.shoppinglisttestingyt"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "API_KEY", API_KEY)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude "DebugProbesKt.bin"
    }
}

dependencies {
    def ktx_core = "1.6.0"
    def coroutines = '1.5.1'
    def app_compat = '1.3.1'
    def activity_version = '1.3.1'
    def fragment_version = "1.3.6"
    def constraint_layout = '2.1.0'
    def material = "1.4.0"
    def legacy_support = "1.0.0"
    def recycler_view = '1.2.1'
    def navigation_version = "2.3.5"
    def lifecycle_version = "2.3.1"
    def datastore_pref = '1.0.0'
    def androidx_hilt = "1.0.0"
    def retrofitVersion = '2.9.0'
    def glide = '4.12.0'
    def timber = "4.7.1"
    def room_version = "2.3.0"
    // Testing
    def junit = "4.13.2"
    def junit_testing = "1.1.3"
    def espresso = '3.4.0'
    def truth = "1.1.3"
    def mockito_core = "3.11.2"
    def arch_core = "2.1.0"


    // Kotlin
    implementation "androidx.core:core-ktx:$ktx_core"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // UI
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support"
    implementation "androidx.recyclerview:recyclerview:$recycler_view"
    implementation "androidx.datastore:datastore-preferences:$datastore_pref"

    // Navigation
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"

    // ViewModel and Live Data
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-fragment:$androidx_hilt"
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Local Unit Tests
    implementation 'androidx.test:core:1.4.0'
    testImplementation "junit:junit:$junit"
    testImplementation "com.google.truth:truth:$truth"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "org.mockito:mockito-core:$mockito_core"
    testImplementation "androidx.arch.core:core-testing:$arch_core"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation 'org.robolectric:robolectric:4.6.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:$junit"
    androidTestImplementation "com.google.truth:truth:$truth"
    androidTestImplementation "androidx.test.ext:junit:$junit_testing"
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "org.mockito:mockito-core:$mockito_core"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_core"
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

}